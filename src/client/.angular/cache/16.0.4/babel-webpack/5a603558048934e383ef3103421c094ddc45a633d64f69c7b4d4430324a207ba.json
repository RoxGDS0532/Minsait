{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isLoggedIn = false;\n    this.currentUser = null;\n  }\n  loginToServer(correo, password1) {\n    return this.http.post('http://localhost:3000/api/login', {\n      correo,\n      password1\n    });\n  }\n  isAuthenticated() {\n    return this.isLoggedIn;\n  }\n  setLoggendInStatus(status) {\n    this.isLoggedIn = status;\n  }\n  logout() {\n    this.isLoggedIn = false;\n  }\n  setCurrentUser(usuario) {\n    this.currentUser = usuario;\n  }\n  getCurrentUser() {\n    return this.currentUser;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","isLoggedIn","currentUser","loginToServer","correo","password1","post","isAuthenticated","setLoggendInStatus","status","logout","setCurrentUser","usuario","getCurrentUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Brayan Mendiola\\Documents\\GitHub\\Minsait\\client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuarios } from 'src/app/interfaces/usuarios';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedIn = false;\r\n  private currentUser: Usuarios| null = null;\r\n  constructor(private http: HttpClient){}\r\n\r\n\r\nloginToServer(correo: string, password1: string) {\r\n  return this.http.post('http://localhost:3000/api/login', { correo, password1 });\r\n}\r\nisAuthenticated(): boolean {\r\n  return this.isLoggedIn;\r\n}\r\n\r\nsetLoggendInStatus(status: boolean){\r\n  this.isLoggedIn = status;\r\n}\r\nlogout(){\r\n  this.isLoggedIn = false;\r\n}\r\nsetCurrentUser(usuario: Usuarios) {\r\n  this.currentUser = usuario;\r\n}\r\n\r\ngetCurrentUser(): Usuarios | null {\r\n  return this.currentUser;\r\n}\r\n}\r\n"],"mappings":";;AAIA,MAGaA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,WAAW,GAAmB,IAAI;EACJ;EAGxCC,aAAaA,CAACC,MAAc,EAAEC,SAAiB;IAC7C,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,iCAAiC,EAAE;MAAEF,MAAM;MAAEC;IAAS,CAAE,CAAC;EACjF;EACAE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACN,UAAU;EACxB;EAEAO,kBAAkBA,CAACC,MAAe;IAChC,IAAI,CAACR,UAAU,GAAGQ,MAAM;EAC1B;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACT,UAAU,GAAG,KAAK;EACzB;EACAU,cAAcA,CAACC,OAAiB;IAC9B,IAAI,CAACV,WAAW,GAAGU,OAAO;EAC5B;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACX,WAAW;EACzB;;AAzBaJ,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPtB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}