{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass GamesService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/api';\n    this.API_URI = 'http://localhost:3000/api';\n  }\n  getact(idUsuario) {\n    return this.http.get(`${this.baseUrl}/actividades/${idUsuario}`);\n  }\n  gethistact(idUsuario) {\n    return this.http.get(`${this.baseUrl}/histact/${idUsuario}`);\n  }\n  getrol() {\n    return this.http.get(`${this.API_URI}/rol`);\n  }\n  getuser() {\n    return this.http.get(`${this.API_URI}/user`);\n  }\n  geEn() {\n    return this.http.get(`${this.API_URI}/add`);\n  }\n  gePar() {\n    return this.http.get(`${this.API_URI}/add2`);\n  }\n  geEst() {\n    return this.http.get(`${this.API_URI}/add3`);\n  }\n  deleteact(id) {\n    return this.http.delete(`${this.API_URI}/actividades/${id}`);\n  }\n  saveact(activities) {\n    return this.http.post(`${this.API_URI}/actividades`, activities);\n  }\n  saveuser(usuarios) {\n    return this.http.post(`${this.API_URI}/user`, usuarios);\n  }\n  updateact(id, update) {\n    return this.http.put(`${this.API_URI}/actividades/${id}`, update);\n  }\n  updateuser(id, update) {\n    return this.http.put(`${this.API_URI}/user/${id}`, update);\n  }\n  getacti(id) {\n    return this.http.get(`${this.API_URI}/editact/${id}`);\n  }\n  getuse(id) {\n    return this.http.get(`${this.API_URI}/user/${id}`);\n  }\n}\nGamesService.ɵfac = function GamesService_Factory(t) {\n  return new (t || GamesService)(i0.ɵɵinject(i1.HttpClient));\n};\nGamesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GamesService,\n  factory: GamesService.ɵfac,\n  providedIn: 'root'\n});\nexport { GamesService };","map":{"version":3,"names":["GamesService","constructor","http","baseUrl","API_URI","getact","idUsuario","get","gethistact","getrol","getuser","geEn","gePar","geEst","deleteact","id","delete","saveact","activities","post","saveuser","usuarios","updateact","update","put","updateuser","getacti","getuse","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Brayan Mendiola\\Documents\\GitHub\\Minsait\\client\\src\\app\\services\\games.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient}  from '@angular/common/http'\r\nimport {Activities } from '../interfaces/actividades'\r\nimport { Usuarios} from '../interfaces/usuarios'\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GamesService {\r\n\r\n  private baseUrl = 'http://localhost:3000/api';\r\n    API_URI='http://localhost:3000/api';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getact(idUsuario: number | undefined): Observable<any>{\r\n    return this.http.get(`${this.baseUrl}/actividades/${idUsuario}`);\r\n  }\r\n  gethistact(idUsuario: number | undefined): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/histact/${idUsuario}`);\r\n  } \r\n  getrol(){\r\n    return this.http.get(`${this.API_URI}/rol`);\r\n  }\r\n  getuser(){\r\n    return this.http.get(`${this.API_URI}/user`);\r\n  }\r\n  geEn(){\r\n    return this.http.get(`${this.API_URI}/add`);\r\n  }\r\n  gePar(){\r\n    return this.http.get(`${this.API_URI}/add2`);\r\n  }\r\n  geEst(){\r\n    return this.http.get(`${this.API_URI}/add3`);\r\n  }\r\n\r\n\r\n  deleteact(id: string|number){\r\n    return this.http.delete(`${this.API_URI}/actividades/${id}`);\r\n  }\r\n\r\n  saveact(activities: Activities){\r\n    return this.http.post(`${this.API_URI}/actividades`,activities);\r\n  }\r\n  saveuser(usuarios: Usuarios){\r\n    return this.http.post(`${this.API_URI}/user`,usuarios);\r\n  }\r\n  updateact(id: string|number,update: Activities): Observable<Activities>{\r\n    return this.http.put(`${this.API_URI}/actividades/${id}`,update);\r\n  }\r\n  updateuser(id: string | number | undefined,update: Usuarios): Observable<Activities>{\r\n    return this.http.put(`${this.API_URI}/user/${id}`,update);\r\n  }\r\n  getacti(id: string | number | undefined) {\r\n    return this.http.get(`${this.API_URI}/editact/${id}`);\r\n  }\r\n\r\n  getuse(id: string|number) {\r\n    return this.http.get(`${this.API_URI}/user/${id}`);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAKA,MAGaA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,2BAA2B;IAC3C,KAAAC,OAAO,GAAC,2BAA2B;EACG;EAExCC,MAAMA,CAACC,SAA6B;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,OAAO,gBAAgBG,SAAS,EAAE,CAAC;EAClE;EACAE,UAAUA,CAACF,SAA6B;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,OAAO,YAAYG,SAAS,EAAE,CAAC;EAC9D;EACAG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,MAAM,CAAC;EAC7C;EACAM,OAAOA,CAAA;IACL,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,OAAO,CAAC;EAC9C;EACAO,IAAIA,CAAA;IACF,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,MAAM,CAAC;EAC7C;EACAQ,KAAKA,CAAA;IACH,OAAO,IAAI,CAACV,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,OAAO,CAAC;EAC9C;EACAS,KAAKA,CAAA;IACH,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,OAAO,CAAC;EAC9C;EAGAU,SAASA,CAACC,EAAiB;IACzB,OAAO,IAAI,CAACb,IAAI,CAACc,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,gBAAgBW,EAAE,EAAE,CAAC;EAC9D;EAEAE,OAAOA,CAACC,UAAsB;IAC5B,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,GAAG,IAAI,CAACf,OAAO,cAAc,EAACc,UAAU,CAAC;EACjE;EACAE,QAAQA,CAACC,QAAkB;IACzB,OAAO,IAAI,CAACnB,IAAI,CAACiB,IAAI,CAAC,GAAG,IAAI,CAACf,OAAO,OAAO,EAACiB,QAAQ,CAAC;EACxD;EACAC,SAASA,CAACP,EAAiB,EAACQ,MAAkB;IAC5C,OAAO,IAAI,CAACrB,IAAI,CAACsB,GAAG,CAAC,GAAG,IAAI,CAACpB,OAAO,gBAAgBW,EAAE,EAAE,EAACQ,MAAM,CAAC;EAClE;EACAE,UAAUA,CAACV,EAA+B,EAACQ,MAAgB;IACzD,OAAO,IAAI,CAACrB,IAAI,CAACsB,GAAG,CAAC,GAAG,IAAI,CAACpB,OAAO,SAASW,EAAE,EAAE,EAACQ,MAAM,CAAC;EAC3D;EACAG,OAAOA,CAACX,EAA+B;IACrC,OAAO,IAAI,CAACb,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,YAAYW,EAAE,EAAE,CAAC;EACvD;EAEAY,MAAMA,CAACZ,EAAiB;IACtB,OAAO,IAAI,CAACb,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,SAASW,EAAE,EAAE,CAAC;EACpD;;AAnDWf,YAAY,C;mBAAZA,YAAY,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZ/B,YAAY,C;SAAZA,YAAY;EAAAgC,OAAA,EAAZhC,YAAY,CAAAiC,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPlC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}